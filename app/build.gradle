apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext.versionMajor = 0
ext.versionMinor = 9
ext.versionPatch = 1

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        applicationId "io.github.vladimirmi.internetradioplayer"
        minSdkVersion 16
        //noinspection OldTargetApi
        targetSdkVersion 26
        versionCode generateVersionCode()
        versionName generateVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [toothpick_registry_package_name: 'io.github.vladimirmi.internetradioplayer']
            }
        }
    }
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }
    compileOptions {
        incremental = false
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        assembleRelease.dependsOn rootProject.detektCheck
    }
}

private Integer generateVersionCode() {
    return ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    return "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
}

ext {
    SUPPORT_LIBRARY_VERSION = "26.0.2"
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //Kotlin
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:' + kotlin_version
    //Support
    compile 'com.android.support:appcompat-v7:' + SUPPORT_LIBRARY_VERSION
    compile 'com.android.support:design:' + SUPPORT_LIBRARY_VERSION
    compile 'com.android.support:support-media-compat:' + SUPPORT_LIBRARY_VERSION
    compile 'com.android.support.constraint:constraint-layout:1.1.0-beta5'
    compile 'com.google.android:flexbox:0.3.1'
    //Rx
    compile 'io.reactivex.rxjava2:rxjava:2.1.9'
    compile 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.rxrelay2:rxrelay:2.0.0'
    //DI
    compile 'com.github.stephanenicolas.toothpick:toothpick-runtime:1.1.1'
    kapt 'com.github.stephanenicolas.toothpick:toothpick-compiler:1.1.1'
    //Moxy
    kapt 'com.arello-mobile:moxy-compiler:1.5.3'
    compile 'com.arello-mobile:moxy-app-compat:1.5.3'
    //Navigation
    compile 'ru.terrakok.cicerone:cicerone:2.1.0'
    //Logging
    compile 'com.jakewharton.timber:timber:4.6.0'
    compile 'com.facebook.stetho:stetho:1.5.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.7.1@aar') {
        transitive = true
    }
    //ExoPlayer
    compile 'com.google.android.exoplayer:exoplayer-core:r2.5.1'
    compile 'com.google.code.gson:gson:2.8.2'
}
